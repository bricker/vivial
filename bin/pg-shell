#!/usr/bin/env bash

set -eu

source "$EAVE_HOME"/develop/functions.bash

function run-pg-shell() {
	local usage="Usage: pg-shell -d database [-u username]"
	local dbname=""
	local username=""

	while getopts "d:u:h" argname; do
		case "$argname" in
		d) dbname=$OPTARG ;;
		u) username=$OPTARG ;;
		h)
			echo "$usage"
			exit 0
			;;
		*)
			echo "$usage"
			exit 1
			;;
		esac
	done

	if test -z "$dbname"; then
		echo "$usage"
		exit 1
	fi

	local socketdir=${XDG_RUNTIME_DIR}/.cloudsqlproxy
	local connectionName
	connectionName=$(gcloud --format json sql instances list --filter="state=RUNNABLE" | jq -r .[0].connectionName)

	if test -z "$username"; then
		username=$(gcloud --format json info | jq -r .config.account)
	fi

	if test -z "$connectionName" || test -z "$username"; then
		statusmsg -e "gcloud command failed. Cannot connect to pg shell"
		exit 1
	fi

	# FIXME: hardcoded socket name
	if ! test -S "$socketdir/$connectionName/.s.PGSQL.5432"; then
		statusmsg -e "It seems that the Cloud SQL proxy isn't running or isn't connected to the correct CloudSQL instance. Run 'bin/cloud-sql-proxy', then retry this command."
		exit 1
	fi

	statusmsg -s "Connecting to CloudSQL shell as $username with database $dbname selected, via $connectionName"
	psql -h "$socketdir/$connectionName" -U "$username" "$dbname"
}

run-pg-shell "$@"
