"""activities tables

Revision ID: 933d4868e5d6
Revises: 953a3860aa69
Create Date: 2024-11-09 23:23:07.885465

"""

import geoalchemy2
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

import eave.core.internal.orm.address_types

# revision identifiers, used by Alembic.
revision = "933d4868e5d6"
down_revision = "953a3860aa69"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "activities",
        sa.Column("id", sa.Uuid(), server_default=sa.text("(gen_random_uuid())"), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column(
            "coordinates",
            geoalchemy2.types.Geography(
                geometry_type="POINT", srid=4326, from_text="ST_GeogFromText", name="geography", nullable=False
            ),
            nullable=False,
        ),
        sa.Column("subcategory_id", sa.Uuid(), nullable=False),
        sa.Column("duration_minutes", sa.Integer(), nullable=False),
        sa.Column("availability", sa.String(), nullable=False),
        sa.Column("address", eave.core.internal.orm.address_types.PostgisStdaddrColumnType(), nullable=False),
        sa.Column("is_bookable", sa.Boolean(), nullable=False),
        sa.Column("booking_url", sa.String(), nullable=True),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_activities_coordinates", "activities", ["coordinates"], unique=False, postgresql_using="gist")
    op.create_table(
        "eventbrite_events",
        sa.Column("id", sa.Uuid(), server_default=sa.text("(gen_random_uuid())"), nullable=False),
        sa.Column("eventbrite_event_id", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("time_range", postgresql.TSTZRANGE(), nullable=False),
        sa.Column("cost_cents_range", postgresql.INT4RANGE(), nullable=False),
        sa.Column(
            "coordinates",
            geoalchemy2.types.Geography(
                geometry_type="POINT", srid=4326, from_text="ST_GeogFromText", name="geography", nullable=False
            ),
            nullable=False,
        ),
        sa.Column("subcategory_id", sa.Uuid(), nullable=False),
        sa.Column("format_id", sa.Uuid(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("eventbrite_event_id"),
    )
    op.create_index(
        "idx_eventbrite_events_coordinates", "eventbrite_events", ["coordinates"], unique=False, postgresql_using="gist"
    )
    op.create_table(
        "images",
        sa.Column("id", sa.Uuid(), server_default=sa.text("(gen_random_uuid())"), nullable=False),
        sa.Column("src", sa.String(), nullable=False),
        sa.Column("alt", sa.String(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "activity_images",
        sa.Column("activity_id", sa.Uuid(), nullable=False),
        sa.Column("image_id", sa.Uuid(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["activity_id"], ["activities.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["image_id"], ["images.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("activity_id", "image_id"),
    )
    op.create_table(
        "ticket_types",
        sa.Column("id", sa.Uuid(), server_default=sa.text("(gen_random_uuid())"), nullable=False),
        sa.Column("activity_id", sa.Uuid(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("base_cost_cents", sa.Integer(), nullable=False),
        sa.Column("service_fee_cents", sa.Integer(), nullable=False),
        sa.Column("tax_percentage", sa.Float(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["activity_id"], ["activities.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("ticket_types")
    op.drop_table("activity_images")
    op.drop_table("images")
    op.drop_index("idx_eventbrite_events_coordinates", table_name="eventbrite_events", postgresql_using="gist")
    op.drop_table("eventbrite_events")
    op.drop_index("idx_activities_coordinates", table_name="activities", postgresql_using="gist")
    op.drop_table("activities")
    # ### end Alembic commands ###
