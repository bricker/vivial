"""remove auth token table

Revision ID: 7077e9067e19
Revises: 25534cc72fa4
Create Date: 2023-05-04 19:34:53.048828

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "7077e9067e19"
down_revision = "25534cc72fa4"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_auth_tokens_access_token_hashed", table_name="auth_tokens")
    op.drop_index("ix_auth_tokens_refresh_token_hashed", table_name="auth_tokens")
    op.drop_index("jwt_claims", table_name="auth_tokens")
    op.drop_index("token_pair", table_name="auth_tokens")
    op.drop_table("auth_tokens")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_tokens",
        sa.Column("team_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("account_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("gen_random_uuid()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "access_token_hashed",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "refresh_token_hashed",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("jti", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("iss", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("aud", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "expires",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "invalidated",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["team_id", "account_id"],
            ["accounts.team_id", "accounts.id"],
            name="auth_tokens_team_id_account_id_fkey",
        ),
        sa.ForeignKeyConstraint(["team_id"], ["teams.id"], name="auth_tokens_team_id_fkey"),
        sa.PrimaryKeyConstraint("team_id", "account_id", "id", name="auth_tokens_pkey"),
    )
    op.create_index(
        "token_pair",
        "auth_tokens",
        ["access_token_hashed", "refresh_token_hashed"],
        unique=False,
    )
    op.create_index(
        "jwt_claims",
        "auth_tokens",
        ["access_token_hashed", "aud", "iss", "expires"],
        unique=False,
    )
    op.create_index(
        "ix_auth_tokens_refresh_token_hashed",
        "auth_tokens",
        ["refresh_token_hashed"],
        unique=False,
    )
    op.create_index(
        "ix_auth_tokens_access_token_hashed",
        "auth_tokens",
        ["access_token_hashed"],
        unique=False,
    )
    # ### end Alembic commands ###
