"""atlassian connect

Revision ID: 8b9901c4cc2c
Revises: b2eb47841833
Create Date: 2023-06-02 18:45:05.976827

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "8b9901c4cc2c"
down_revision = "b2eb47841833"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "connect_installations",
        sa.Column("team_id", sa.Uuid(), nullable=True),
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("(gen_random_uuid())"),
            nullable=False,
        ),
        sa.Column(
            "product",
            sa.Enum("jira", "confluence", name="atlassianproduct"),
            nullable=False,
        ),
        sa.Column("client_key", sa.String(), nullable=False),
        sa.Column("shared_secret", sa.String(), nullable=False),
        sa.Column("base_url", sa.String(), nullable=False),
        sa.Column("atlassian_actor_account_id", sa.String(), nullable=True),
        sa.Column("display_url", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["team_id"], ["teams.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_connect_installations_product"),
        "connect_installations",
        ["product", "client_key"],
        unique=True,
    )
    op.create_table(
        "confluence_destinations",
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("(gen_random_uuid())"),
            nullable=False,
        ),
        sa.Column("connect_installation_id", sa.Uuid(), nullable=False),
        sa.Column("space_key", sa.String(), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["connect_installation_id"],
            ["connect_installations.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # op.drop_index(
    #     "ix_forge_installations_forge_app_installation_id",
    #     table_name="forge_installations",
    # )
    # op.drop_table("forge_installations")
    op.drop_constraint("accounts_team_id_fkey", "accounts", type_="foreignkey")
    op.create_foreign_key(
        None, "accounts", "teams", ["team_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "atlassian_installations_team_id_fkey",
        "atlassian_installations",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "atlassian_installations",
        "teams",
        ["team_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "document_references_team_id_fkey",
        "document_references",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "document_references",
        "teams",
        ["team_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "github_installations_team_id_fkey",
        "github_installations",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "github_installations",
        "teams",
        ["team_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "slack_sources_team_id_fkey", "slack_sources", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "slack_sources", "teams", ["team_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "subscriptions_team_id_document_reference_id_fkey",
        "subscriptions",
        type_="foreignkey",
    )
    op.drop_constraint(
        "subscriptions_team_id_fkey", "subscriptions", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "subscriptions",
        "document_references",
        ["team_id", "document_reference_id"],
        ["team_id", "id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None, "subscriptions", "teams", ["team_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
    # # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint(None, "subscriptions", type_="foreignkey")
    # op.drop_constraint(None, "subscriptions", type_="foreignkey")
    # op.create_foreign_key(
    #     "subscriptions_team_id_fkey",
    #     "subscriptions",
    #     "teams",
    #     ["team_id"],
    #     ["id"],
    # )
    # op.create_foreign_key(
    #     "subscriptions_team_id_document_reference_id_fkey",
    #     "subscriptions",
    #     "document_references",
    #     ["team_id", "document_reference_id"],
    #     ["team_id", "id"],
    # )
    # op.drop_constraint(None, "slack_sources", type_="foreignkey")
    # op.create_foreign_key(
    #     "slack_sources_team_id_fkey",
    #     "slack_sources",
    #     "teams",
    #     ["team_id"],
    #     ["id"],
    # )
    # op.drop_constraint(None, "github_installations", type_="foreignkey")
    # op.create_foreign_key(
    #     "github_installations_team_id_fkey",
    #     "github_installations",
    #     "teams",
    #     ["team_id"],
    #     ["id"],
    # )
    # op.drop_constraint(None, "document_references", type_="foreignkey")
    # op.create_foreign_key(
    #     "document_references_team_id_fkey",
    #     "document_references",
    #     "teams",
    #     ["team_id"],
    #     ["id"],
    # )
    # op.drop_constraint(None, "atlassian_installations", type_="foreignkey")
    # op.create_foreign_key(
    #     "atlassian_installations_team_id_fkey",
    #     "atlassian_installations",
    #     "teams",
    #     ["team_id"],
    #     ["id"],
    # )
    # op.drop_constraint(None, "accounts", type_="foreignkey")
    # op.create_foreign_key(
    #     "accounts_team_id_fkey", "accounts", "teams", ["team_id"], ["id"]
    # )
    # op.create_table(
    #     "forge_installations",
    #     sa.Column("team_id", sa.UUID(), autoincrement=False, nullable=True),
    #     sa.Column(
    #         "id",
    #         sa.UUID(),
    #         server_default=sa.text("gen_random_uuid()"),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.Column(
    #         "confluence_space_key",
    #         sa.VARCHAR(),
    #         autoincrement=False,
    #         nullable=True,
    #     ),
    #     sa.Column(
    #         "forge_app_id", sa.VARCHAR(), autoincrement=False, nullable=False
    #     ),
    #     sa.Column(
    #         "forge_app_version",
    #         sa.VARCHAR(),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.Column(
    #         "forge_app_installation_id",
    #         sa.VARCHAR(),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.Column(
    #         "forge_app_installer_account_id",
    #         sa.VARCHAR(),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.Column(
    #         "webtrigger_url", sa.VARCHAR(), autoincrement=False, nullable=False
    #     ),
    #     sa.Column(
    #         "created",
    #         postgresql.TIMESTAMP(),
    #         server_default=sa.text("CURRENT_TIMESTAMP"),
    #         autoincrement=False,
    #         nullable=False,
    #     ),
    #     sa.Column(
    #         "updated",
    #         postgresql.TIMESTAMP(),
    #         autoincrement=False,
    #         nullable=True,
    #     ),
    #     sa.ForeignKeyConstraint(
    #         ["team_id"], ["teams.id"], name="forge_installations_team_id_fkey"
    #     ),
    #     sa.PrimaryKeyConstraint(
    #         "forge_app_installation_id", "id", name="forge_installations_pkey"
    #     ),
    # )
    # op.create_index(
    #     "ix_forge_installations_forge_app_installation_id",
    #     "forge_installations",
    #     ["forge_app_installation_id"],
    #     unique=False,
    # )
    # op.drop_table("confluence_destinations")
    # op.drop_index(
    #     op.f("ix_connect_installations_product"),
    #     table_name="connect_installations",
    # )
    # op.drop_table("connect_installations")
    # # ### end Alembic commands ###
