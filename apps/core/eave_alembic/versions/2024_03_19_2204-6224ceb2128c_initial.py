"""initial

Revision ID: 6224ceb2128c
Revises: 
Create Date: 2024-03-19 22:04:47.757676

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6224ceb2128c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('teams',
    sa.Column('id', sa.Uuid(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accounts',
    sa.Column('team_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('visitor_id', sa.Uuid(), nullable=True),
    sa.Column('opaque_utm_params', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('auth_provider', sa.Enum('google', 'github', name='authprovider'), nullable=False),
    sa.Column('auth_id', sa.String(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('previous_access_token', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('last_login', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'id', name='pk_accounts_team_id_id')
    )
    op.create_index('auth_provider_auth_id', 'accounts', ['auth_provider', 'auth_id'], unique=True)
    op.create_index(op.f('ix_accounts_auth_provider'), 'accounts', ['auth_provider', 'auth_id', 'access_token'], unique=True)
    op.create_table('client_credentials',
    sa.Column('team_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('secret', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('scope', sa.SmallInteger(), nullable=False),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'id', name='pk_client_credentials_team_id_id')
    )
    op.create_index('client_id_client_secret', 'client_credentials', ['id', 'secret'], unique=True)
    op.create_table('github_installations',
    sa.Column('team_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('github_install_id', sa.String(), nullable=False),
    sa.Column('github_owner_login', sa.String(), nullable=True),
    sa.Column('install_flow_state', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('github_install_id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('virtual_events',
    sa.Column('team_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('(gen_random_uuid())'), nullable=False),
    sa.Column('readable_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('view_id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'id', name='pk_virtual_events_team_id_id')
    )
    op.create_index('team_id_view_id', 'virtual_events', ['team_id', 'view_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('team_id_view_id', table_name='virtual_events')
    op.drop_table('virtual_events')
    op.drop_table('github_installations')
    op.drop_index('client_id_client_secret', table_name='client_credentials')
    op.drop_table('client_credentials')
    op.drop_index(op.f('ix_accounts_auth_provider'), table_name='accounts')
    op.drop_index('auth_provider_auth_id', table_name='accounts')
    op.drop_table('accounts')
    op.drop_table('teams')
    # ### end Alembic commands ###
