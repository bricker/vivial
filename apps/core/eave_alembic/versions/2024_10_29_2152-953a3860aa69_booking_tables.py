"""booking tables

Revision ID: 953a3860aa69
Revises: e0b9bbceb799
Create Date: 2024-10-29 21:52:35.543183

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "953a3860aa69"
down_revision = "e0b9bbceb799"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "reserver_details",
        sa.Column("id", sa.Uuid(), server_default=sa.text("(gen_random_uuid())"), nullable=False),
        sa.Column("account_id", sa.Uuid(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"], ["accounts.id"], name="account_id_reserver_details_fk", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("account_id", "id", name="account_id_id_pk"),
        sa.UniqueConstraint("id", name="reserver_details_id_unique"),
    )
    op.create_table(
        "bookings",
        sa.Column("id", sa.Uuid(), server_default=sa.text("(gen_random_uuid())"), nullable=False),
        sa.Column("reserver_details_id", sa.Uuid(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["reserver_details_id"], ["reserver_details.id"], name="reserver_details_booking_fk", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "account_bookings",
        sa.Column("account_id", sa.Uuid(), nullable=False),
        sa.Column("booking_id", sa.Uuid(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"], ["accounts.id"], name="account_id_account_booking_fk", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["booking_id"], ["bookings.id"], name="booking_id_account_booking_fk", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("account_id", "booking_id", name="account_booking_pivot_pk"),
    )
    op.create_index("account_booking_pivot_reverse_index", "account_bookings", ["booking_id"], unique=False)
    op.create_table(
        "booking_activity_templates",
        sa.Column("id", sa.Uuid(), server_default=sa.text("(gen_random_uuid())"), nullable=False),
        sa.Column("booking_id", sa.Uuid(), nullable=False),
        sa.Column("activity_name", sa.String(), nullable=False),
        sa.Column("activity_start_time", sa.DateTime(), nullable=False),
        sa.Column("num_attendees", sa.Integer(), nullable=False),
        sa.Column("external_booking_link", sa.String(), nullable=True),
        sa.Column("activity_location_address1", sa.String(), nullable=False),
        sa.Column("activity_location_address2", sa.String(), nullable=False),
        sa.Column("activity_location_city", sa.String(), nullable=False),
        sa.Column("activity_location_region", sa.String(), nullable=False),
        sa.Column("activity_location_country", sa.String(), nullable=False),
        sa.Column("activity_location_latitude", sa.Float(), nullable=False),
        sa.Column("activity_location_longitude", sa.Float(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["booking_id"], ["bookings.id"], name="booking_id_booking_activity_template_fk", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("booking_id", "id", name="booking_activity_template_pk"),
    )
    op.create_table(
        "booking_reservation_templates",
        sa.Column("id", sa.Uuid(), server_default=sa.text("(gen_random_uuid())"), nullable=False),
        sa.Column("booking_id", sa.Uuid(), nullable=False),
        sa.Column("reservation_name", sa.String(), nullable=False),
        sa.Column("reservation_start_time", sa.DateTime(), nullable=False),
        sa.Column("num_attendees", sa.Integer(), nullable=False),
        sa.Column("external_booking_link", sa.String(), nullable=True),
        sa.Column("reservation_location_address1", sa.String(), nullable=False),
        sa.Column("reservation_location_address2", sa.String(), nullable=False),
        sa.Column("reservation_location_city", sa.String(), nullable=False),
        sa.Column("reservation_location_region", sa.String(), nullable=False),
        sa.Column("reservation_location_country", sa.String(), nullable=False),
        sa.Column("reservation_location_latitude", sa.Float(), nullable=False),
        sa.Column("reservation_location_longitude", sa.Float(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["booking_id"], ["bookings.id"], name="booking_id_booking_reservation_template_fk", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("booking_id", "id", name="booking_reservation_template_pk"),
    )
    op.create_table(
        "outing_activities",
        sa.Column("outing_id", sa.Uuid(), nullable=False),
        sa.Column("activity_id", sa.String(), nullable=False),
        sa.Column("activity_source", sa.String(), nullable=False),
        sa.Column("activity_start_time", sa.DateTime(), nullable=False),
        sa.Column("num_attendees", sa.Integer(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["outing_id"], ["outings.id"], name="outing_id_activity_pivot_fk", ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("outing_id", "activity_id", name="outing_activity_pivot_pk"),
    )
    op.create_table(
        "outing_reservations",
        sa.Column("outing_id", sa.Uuid(), nullable=False),
        sa.Column("reservation_id", sa.String(), nullable=False),
        sa.Column("reservation_source", sa.String(), nullable=False),
        sa.Column("reservation_start_time", sa.DateTime(), nullable=False),
        sa.Column("num_attendees", sa.Integer(), nullable=False),
        sa.Column("created", sa.DateTime(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["outing_id"], ["outings.id"], name="outing_id_reservation_pivot_fk", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("outing_id", "reservation_id", name="outing_reservation_pivot_pk"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("outing_reservations")
    op.drop_table("outing_activities")
    op.drop_table("booking_reservation_templates")
    op.drop_table("booking_activity_templates")
    op.drop_index("account_booking_pivot_reverse_index", table_name="account_bookings")
    op.drop_table("account_bookings")
    op.drop_table("bookings")
    op.drop_table("reserver_details")
    # ### end Alembic commands ###
