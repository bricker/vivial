"""initial db

Revision ID: e37857c82f81
Revises: 
Create Date: 2023-04-05 19:55:29.498843

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "e37857c82f81"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "access_requests",
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("visitor_id", sa.Uuid(), nullable=True),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("opaque_input", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_access_requests_email"),
        "access_requests",
        ["email"],
        unique=True,
    )
    op.create_index(
        op.f("ix_access_requests_visitor_id"),
        "access_requests",
        ["visitor_id"],
        unique=False,
    )
    op.create_table(
        "teams",
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "document_platform",
            sa.Enum(
                "eave", "confluence", "google_drive", name="documentplatform"
            ),
            nullable=True,
        ),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "accounts",
        sa.Column("team_id", sa.Uuid(), nullable=False),
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "auth_provider",
            sa.Enum("google", "slack", name="authprovider"),
            nullable=False,
        ),
        sa.Column("auth_id", sa.String(), nullable=False),
        sa.Column("oauth_token", sa.String(), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("team_id", "id"),
    )
    op.create_index(
        "auth_provider_auth_id",
        "accounts",
        ["auth_provider", "auth_id"],
        unique=True,
    )
    op.create_table(
        "confluence_destinations",
        sa.Column("team_id", sa.Uuid(), nullable=False),
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("api_username", sa.String(), nullable=False),
        sa.Column("api_key", sa.String(), nullable=False),
        sa.Column("space", sa.String(), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("team_id", "id"),
    )
    op.create_table(
        "document_references",
        sa.Column("team_id", sa.Uuid(), nullable=False),
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("document_id", sa.String(), nullable=False),
        sa.Column("document_url", sa.String(), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("team_id", "id"),
    )
    op.create_index(
        "document_key",
        "document_references",
        ["team_id", "document_id"],
        unique=True,
    )
    op.create_table(
        "slack_sources",
        sa.Column("team_id", sa.Uuid(), nullable=False),
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("slack_team_id", sa.String(), nullable=False),
        sa.Column("bot_token", sa.String(), nullable=False),
        sa.Column("bot_id", sa.String(), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("team_id", "id"),
        sa.UniqueConstraint("slack_team_id"),
    )
    op.create_index(
        "slack_team_id_eave_team_id",
        "slack_sources",
        ["team_id", "slack_team_id"],
        unique=True,
    )
    op.create_table(
        "subscriptions",
        sa.Column("team_id", sa.Uuid(), nullable=False),
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column(
            "source_platform",
            sa.Enum(
                "slack", "github", "jira", name="subscriptionsourceplatform"
            ),
            nullable=False,
        ),
        sa.Column(
            "source_event",
            sa.Enum(
                "slack_message",
                "github_file_change",
                "jira_issue_comment",
                name="subscriptionsourceevent",
            ),
            nullable=False,
        ),
        sa.Column("source_id", sa.String(), nullable=False),
        sa.Column("document_reference_id", sa.Uuid(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["team_id", "document_reference_id"],
            ["document_references.team_id", "document_references.id"],
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["teams.id"],
        ),
        sa.PrimaryKeyConstraint("team_id", "id"),
    )
    op.create_index(
        "source_key",
        "subscriptions",
        ["team_id", "source_platform", "source_event", "source_id"],
        unique=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("source_key", table_name="subscriptions")
    op.drop_table("subscriptions")
    op.drop_index("slack_team_id_eave_team_id", table_name="slack_sources")
    op.drop_table("slack_sources")
    op.drop_index("document_key", table_name="document_references")
    op.drop_table("document_references")
    op.drop_table("confluence_destinations")
    op.drop_index("auth_provider_auth_id", table_name="accounts")
    op.drop_table("accounts")
    op.drop_table("teams")
    op.drop_index(
        op.f("ix_access_requests_visitor_id"), table_name="access_requests"
    )
    op.drop_index(
        op.f("ix_access_requests_email"), table_name="access_requests"
    )
    op.drop_table("access_requests")
    # ### end Alembic commands ###
