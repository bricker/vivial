#!/usr/bin/env bash

set -eu

source "$EAVE_HOME"/develop/functions.bash

function install-certs() (
	local certPath=$1
	local certFileName
	certFileName=$(basename "$certPath")
	local certFileTemp=/tmp/$certFileName
	local certName
	certName=$(basename "$certPath" .crt)
	rm -f "$certFileTemp"
	cat "$certPath" >"$certFileTemp"

	statusmsg -w "sudo privileges are needed to install the development certificate on your system"

	# https://docs.mitmproxy.org/stable/concepts-certificates/
	local kernel
	kernel=$(get-kernel-name)
	case "$kernel" in
	"linux")
		case "$(get-os)" in
		"manjarolinux")
			local certDestDir=/etc/ca-certificates/trust-source/anchors/extra
			local certDestFile="$certDestDir/$certFileName"
			sudo mkdir -p "$certDestDir"
			sudo mv "$certFileTemp" "$certDestDir"
			sudo trust anchor --store "$certDestFile"
			;;
		"ubuntu")
			local certDestDir=/usr/local/share/ca-certificates/extra
			local certDestFile="$certDestDir/$certFileName"
			sudo mkdir -p "$certDestDir"
			sudo mv "$certFileTemp" "$certDestDir"
			sudo update-ca-certificates --fresh
			;;
		*)
			statusmsg -e "Your linux flavor is not supported. Please add support!"
			exit 1
			;;
		esac
		sudo certutil -d "sql:$HOME/.pki/nssdb" -D -n "$certName" &>/dev/null || true
		sudo certutil -d "sql:$HOME/.pki/nssdb" -A -t "C,," -n "$certName" -i "$certDestFile"
		;;
	"darwin")
		sudo security add-trusted-cert \
			-d \
			-p ssl \
			-p basic \
			-k /Library/Keychains/System.keychain \
			"$certFileTemp"
		;;
	*)
		statusmsg -e "This script does not support your operating system. Please add support!"
		exit 1
		;;
	esac

)

for cert in "${EAVE_HOME}"/develop/certs/**/*.crt; do
	install-certs "$cert"
done

function setenv() (
	local bundleOut=/etc/ssl/certs/ca-certificates.crt

	case "$(get-kernel-name)" in
	"linux") ;;
	"darwin")
		security export -t certs -f pemseq -k /System/Library/Keychains/SystemRootCertificates.keychain -o /tmp/rootcabundle.pem
		security export -t certs -f pemseq -k /Library/Keychains/System.keychain -o /tmp/sscabundle.pem
		sudo cat /tmp/rootcabundle.pem /tmp/sscabundle.pem | sudo tee $bundleOut
		;;
	esac

	^add-shell-variable REQUESTS_CA_BUNDLE $bundleOut
	^add-shell-variable SSL_CERT_FILE $bundleOut
)
setenv

statusmsg -i "You may have to manually add certificates to Chrome. You can also enable the Chrome flag chrome://flags/#allow-insecure-localhost"

# Firefox: Load `/usr/lib/x86_64-linux-gnu/pkcs11/p11-kit-trust.so` to the list of security modules under firefox Certificate settings.
