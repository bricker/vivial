---
vars:
  app: &app metabase-app

apiVersion: v1
kind: Service
metadata:
  name: metabase
  namespace: eave
spec:
  type: NodePort
  selector:
    app: *app
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: app-port

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ksa-app-metabase
  namespace: eave
  annotations:
    iam.gke.io/gcp-service-account: gsa-app-metabase@${GOOGLE_CLOUD_PROJECT}.iam.gserviceaccount.com

---
vars:
  app: &app metabase-app

apiVersion: apps/v1
kind: Deployment
metadata:
  name: metabase-deployment
  namespace: eave
  labels:
    app: *app
spec:
  selector:
    matchLabels:
      app: *app
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%
    type: Recreate
  template:
    metadata:
      labels:
        app: *app
    spec:
      serviceAccountName: ksa-app-metabase
      dnsPolicy: ClusterFirst
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      # volumes:
      #   - name: cloudsql-socket
      #     emptyDir: {}
      containers:
        - name: metabase-enterprise
          image: metabase/metabase-enterprise:latest
          imagePullPolicy: Always
          # volumeMounts:
          #   - name: cloudsql-socket
          #     mountPath: /cloudsql
          env:
            - name: MB_DB_TYPE
              value: postgres
            - name: MB_DB_HOST
              value: "127.0.0.1"
              # value: "/cloudsql/eave-staging:us-central1:metabase"
            - name: MB_DB_PORT
              value: "5432"
          envFrom:
            - secretRef:
                name: metabase-secret
            - configMapRef:
                name: metabase-configmap

          ports:
            - name: app-port
              containerPort: 3000

          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

        - name: cloud-sql-proxy
          # This uses the latest version of the Cloud SQL Proxy
          # It is recommended to use a specific version for production environments.
          # See: https://github.com/GoogleCloudPlatform/cloudsql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:latest
          args:
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            - "--private-ip"

            # If you are not connecting with Automatic IAM, you can delete
            # the following flag.
            - "--auto-iam-authn"

            # tcp should be set to the port the proxy should listen on
            # and should match the DB_PORT value set above.
            # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
            - "--port=5432"
            - "--structured-logs"
            # - "--unix-socket /cloudsql"
            - "eave-staging:us-central1:eave-pg-core"
          # volumeMounts:
          #   - name: cloudsql-socket
          #     mountPath: /cloudsql
          securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true

          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 2Gi
