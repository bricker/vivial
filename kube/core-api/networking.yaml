---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: core-api-cert
  namespace: "${NAMESPACE}"
spec:
  domains:
    - "api.${EAVE_ROOT_DOMAIN}"

---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: core-api-fc
  namespace: "${NAMESPACE}"
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: MOVED_PERMANENTLY_DEFAULT

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: core-api-ingress
  namespace: "${NAMESPACE}"
  annotations:
    networking.gke.io/managed-certificates: core-api-cert
    networking.gke.io/v1beta1.FrontendConfig: core-api-fc
    kubernetes.io/ingress.global-static-ip-name: api-dot-eave-dot-dev-addr
    kubernetes.io/ingress.class: gce
  labels:
    app: "${APPNAME}"
spec:
  # ingressClassName: gce # This does not work. Without the "ingress.class" annotation, the LB isn't created.
  defaultBackend:
    service:
      name: default-http-backend
      port:
        number: 8080
  rules:
    - host: "api.${EAVE_ROOT_DOMAIN}"
      http:
        paths:
          # Supported public endpoint prefixes.
          # Everything else is only accessible from the cluster.
          # TODO: a better place to define these?
          - pathType: Prefix
            path: "/status"
            backend: &backend
              service:
                name: "${SERVICENAME}"
                port:
                  name: "${SERVICE_PORT_NAME}"

          - pathType: Prefix
            path: "/public"
            backend: *backend

          - pathType: Prefix
            path: "/oauth"
            backend: *backend

          - pathType: Prefix
            path: "/favicon.ico"
            backend: *backend
